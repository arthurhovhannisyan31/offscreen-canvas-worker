Features
- Add FPS widget

Readme
- add architecture diagrams to main readme
- add readme for each worker with explanation of architecture
- describe used tech stack

Pipelines and checks
- add web-vitals checks as a part of pipelines
  store latest values at file
  compare results at every run
  make logic to update results for decrease and increase
- github pipelines
  check merge conflicts, types, linter, tests
- code validation scripts
- move tests to vitests https://vitest.dev/ for tests
- Add checks for staged files
  run validation for staged files
  run ts, css validation for committed files

Features
- workers controls
  - start/stop workers by start stop buttons
  - change fetch time period

- Add mobx store
  - window size:
    store canvas sizes
    calculate canvas sizes in proportion to window size
    dispatch resize of canvas with throttle 100ms
    submit changes to workers new canvas size
    update performance values from workers messages
  - collect metrics of performance
    submit all metrics to store
    show metrics in table view
- Check if safari still need nested-workers lib.
- Print the image in the main thread also
- SharedWorkers
  Move siblings to shared workers

- Dice module
- Add draggable component to show absence of visualization/interaction delay
  component with the js computed positioning or, make draggable object be controled by user
  and when left alone moved by its trajectory
------------------------------------------------
1. Get data turn in to image
2. Render image to virtual canvas
3. Get image data and propagate it to all subscribers. Main worker, satellite workers, main thread canvas drawer

Leave only 1 type of offscreen worker that works with image data
Each worker should have it own calculator, its own drawer, its own module
All modules should receive same data and process it

fetch data in the background,
store it,
process it,
submit to main thread
